npm init -y 初始化本地node_modules
npm install 安装相应loader 和 plugin

npx webpack 打包命令


在package.json配置
"scripts": {
    "start": "webpack-dev-server",
    "build": "rm -rf dist && npx webpack",
  },
可使用打包命令 npm run build  删除缓存dist文件夹，再运行npx webpack，
打包后重新生成dist文件夹，该文件夹下的index.html可直接访问。
使用npm run start 本地预览,注意webpack-dev-server不依赖dist文件，它是在内存中处理的


开发环境下需要 webpack.config.base.js + webpack.config.js
生产环境下需要 webpack.config.base.js + webpack.config.prod.js


package.json 文件其实就是对项目或者模块包的描述，里面包含许多元信息。
比如项目名称，项目版本，项目执行入口文件等等。npm install 命令会根据这个文件下载所有依赖模块。
npm install 下载的内容为
"devDependencies": {
    "css-loader": "^3.6.0",
    "dart-sass": "^1.23.7",
    "file-loader": "^5.0.2",
    "html-webpack-plugin": "^3.2.0",
    "less": "^3.10.3",
    "less-loader": "^5.0.0",
    "mini-css-extract-plugin": "^0.8.2",
    "sass-loader": "^8.0.0",
    "style-loader": "^1.3.0",
    "stylus": "^0.54.7",
    "stylus-loader": "^3.0.2",
    "webpack": "^4.46.0",
    "webpack-cli": "^3.3.12",
    "webpack-dev-server": "^3.11.2"
  }


重新配置 webpack 最简单的方法：
1、npm install -g webpack@4 webpack-cli@3 
2、npm install –g webpack-dev-server
3、npm init -y
4、然后直接修改package.json中的devDependencies 和 scripts
5、最后 npm install 即可下载相应的 loader 和 plugin
6、开发环境下需要 webpack.config.base.js + webpack.config.js
7、生产环境下需要 webpack.config.base.js + webpack.config.prod.js


